import tensorflow as tf
from tensorflow.keras import layers,models
from tensorflow.keras.datasets import imdb
from tensorflow.keras.preprocessing.sequence import pad_sequences
import matplotlib.pyplot as plt
(train_data,train_labels),(test_data,test_labels)=imdb.load_data(num_words=10000)
max_length=256
train_data=pad_sequences(train_data,maxlen=max_length)
test_data=pad_sequences(test_data,maxlen=max_length)
model=models.Sequential()
model.add(layers.Embedding(input_dim=10000,output_dim=16,input_length=max_length))
model.add(layers.GlobalAveragePooling1D())
model.add(layers.Dense(16,activation='relu'))
model.add(layers.Dense(1,activation='sigmoid'))
model.compile(optimizer='adam',
                loss='binary_crossentropy',
                metrics=['accuracy'])
model.summary()
history=model.fit(train_data,train_labels,
                      epochs=10,
                      batch_size=512,
                      validation_split=0.2)
test_loss,test_acc=model.evaluate(test_data,test_labels)
print(f"Test Accuracy:(test_acc)")
def plot_history(history):
  plt.plot(history.history['accuracy'],label='training accuracy')
  plt.plot(history.history['val_accuracy'],label='validaion accuracy')
  plt.xlabel('Epochs')
  plt.ylabel('Accuracy')
  plt.legend()
  plt.show()
plt.plot(history.history['loss'],label='training loss')
plt.plot(history.history['val_loss'],label='validationLoss')
plt.xlabel('Epochs')
plt.ylabel('loss')
plt.legend()
plt.show()
plot_history(history)
